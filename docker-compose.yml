version: '3.8'

services:
  # Service Laravel Backend
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: tasks-manager-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
      - ./backend/storage:/var/www/storage
    networks:
      - tasks-manager-network
    depends_on:
      - db
      - redis
    environment:
      - DB_HOST=db
      - DB_DATABASE=tasks_manager
      - DB_USERNAME=tasks_user
      - DB_PASSWORD=tasks_password
      - REDIS_HOST=redis
      - PUSHER_APP_ID=2023766
      - PUSHER_APP_KEY=ce4ac741ed75d12a29fe
      - PUSHER_APP_SECRET=1be2777d2156397e4004
      - PUSHER_HOST=
      - PUSHER_PORT=443
      - PUSHER_SCHEME=https
      - PUSHER_APP_CLUSTER=eu

  # Service MySQL Database
  db:
    image: mysql:8.0
    container_name: tasks-manager-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: tasks_manager
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: tasks_user
      MYSQL_PASSWORD: tasks_password
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - tasks-manager-network
    ports:
      - "3306:3306"

  # Service Redis pour les queues et cache
  redis:
    image: redis:7-alpine
    container_name: tasks-manager-redis
    restart: unless-stopped
    networks:
      - tasks-manager-network
    ports:
      - "6379:6379"

  # Service Frontend Vue.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tasks-manager-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - tasks-manager-network
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_PUSHER_APP_KEY=your_pusher_key
      - VITE_PUSHER_HOST=
      - VITE_PUSHER_PORT=443
      - VITE_PUSHER_SCHEME=https
      - VITE_PUSHER_APP_CLUSTER=mt1

volumes:
  dbdata:

networks:
  tasks-manager-network:
    driver: bridge 